import groovy.json.JsonSlurper

plugins {
    id "java"
    id 'org.openjfx.javafxplugin' version '0.1.0'
}

repositories {
    mavenCentral()
    maven { url "https://repo.gradle.org/gradle/libs-releases" } // for gradle-tooling-api
    flatDir { dirs mcreator_path + '/lib' }
}

group = 'net.nerdypuzzle.playeranimator'
version = new JsonSlurper().parse(file('src/main/resources/plugin.json'))['info']['version']

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

javafx {
    version = "21.0.7"
    modules = ['javafx.swing', 'javafx.web']
}

dependencies {
    implementation project(':MCreator')

    project(':MCreator').afterEvaluate(() ->
            project(":MCreator").configurations.named("implementation").get().dependencies.each {
                //noinspection ForeignDelegate
                implementation it
            }
    )

    implementation group: 'org.openjfx', name: 'javafx-web', version: '21.0.7'
    implementation group: 'org.openjfx', name: 'javafx-swing', version: '21.0.7'
}

tasks.jar {
    archiveFileName.set("nerdys_player_animator.zip")
}

tasks.register('runMCreatorWithPlugin', JavaExec) {
    dependsOn jar

    environment("MCREATOR_PLUGINS_FOLDER", file("./build/libs"))
    environment("MCREATOR_PLUGINS_DEV", "")

    jvmArgs '--add-opens', 'java.base/java.lang=ALL-UNNAMED'

    classpath = project(':MCreator').sourceSets.main.runtimeClasspath

    main = 'net.mcreator.Launcher'

    workingDir = mcreator_path
}

subprojects { subproject ->
    subproject.plugins.withType(JavaPlugin) {
        test {
            dependsOn rootProject.jar

            environment("MCREATOR_PLUGINS_FOLDER", new File(rootProject.projectDir, "/build/libs"))
            environment("MCREATOR_PLUGINS_DEV", "")

            workingDir = mcreator_path
        }
    }
}
